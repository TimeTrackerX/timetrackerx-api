{
    "name": "timetrackerx-api",
    "version": "0.0.0",
    "description": "The TimeTrackerX api",
    "main": "dist/web-server.js",
    "repository": "git@github.com:TimeTrackerX/timetrackerx-api.git",
    "author": "Angel S. Moreno <angelxmoreno@gmail.com>",
    "license": "MIT",
    "private": false,
    "scripts": {
        "clean": "rm -rf node_modules yarn.lock && yarn install",
        "build": "tsc",
        "prebuild": "rimraf dist",
        "start": "cross-env NODE_ENV=production TS_NODE_BASEURL=./dist node -r tsconfig-paths/register dist/web-server.js",
        "dev": "cross-env NODE_ENV=development nodemon",
        "workers:dev": "cross-env NODE_ENV=development nodemon --exec \"ts-node src/queue-workers.ts\"",
        "workers:start": "cross-env NODE_ENV=production TS_NODE_BASEURL=./dist node -r tsconfig-paths/register dist/queue-workers.js",
        "docker:cmd": "docker-compose -p timetrackerx-api --env-file .env --file ./docker/docker-compose.yml",
        "docker:start": "bun docker:cmd up --remove-orphans",
        "docker:stop": "bun docker:cmd stop",
        "docker:restart": "bun docker:cmd restart",
        "docker:build": "bun docker:cmd build",
        "lint": "eslint . --ext ts,json --cache",
        "lint:fix": "bun lint --fix",
        "typeorm": "typeorm-ts-node-commonjs",
        "orm": "bun typeorm -d src/database/data-source.ts",
        "migration:generate": "bun orm migration:generate -p",
        "migration:show": "bun orm migration:show",
        "migration:run": "bun orm migration:run",
        "createTestUser": "ts-node src/scripts/createTestUser.ts",
        "prepare": "husky install"
    },
    "dependencies": {
        "body-parser": "^1.20.2",
        "bullmq": "^5.0.0",
        "cache-manager": "^5.3.2",
        "cache-manager-redis-yet": "^4.1.2",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.14.0",
        "compresion": "^1.7.11",
        "cors": "^2.8.5",
        "cross-env": "^7.0.3",
        "dotenv": "^16.3.1",
        "dotenv-expand": "^10.0.0",
        "express": "^4.18.2",
        "jsonwebtoken": "^9.0.2",
        "morgan": "^1.10.0",
        "multer": "^1.4.5-lts.1",
        "mysql2": "^3.6.5",
        "pino": "^8.17.1",
        "redis": "^4.6.12",
        "reflect-metadata": "^0.2.1",
        "routing-controllers": "^0.10.4",
        "tsconfig-paths": "^4.2.0",
        "typeorm": "^0.3.17"
    },
    "devDependencies": {
        "@commitlint/cli": "^18.4.3",
        "@commitlint/config-conventional": "^18.4.3",
        "@swc/core": "^1.3.101",
        "@swc/helpers": "^0.5.3",
        "@types/body-parser": "^1.19.5",
        "@types/compression": "^1.7.5",
        "@types/cors": "^2.8.17",
        "@types/express": "^4.17.21",
        "@types/jsonwebtoken": "^9.0.5",
        "@types/lodash": "^4.14.202",
        "@types/morgan": "^1.9.9",
        "@types/multer": "^1.4.11",
        "bun-types": "latest",
        "eslint": "^8.56.0",
        "eslint-config-universe": "^12.0.0",
        "eslint-plugin-md": "^1.0.19",
        "husky": "^8.0.0",
        "husky-init": "^8.0.0",
        "lint-staged": "^15.2.0",
        "nodemon": "^3.0.2",
        "npx": "^10.2.2",
        "pino-pretty": "^10.3.0",
        "prettier": "^3.1.1",
        "rimraf": "^5.0.5",
        "ts-node": "^10.9.2",
        "tslib": "^2.6.2"
    },
    "peerDependencies": {
        "typescript": "^5.0.0"
    },
    "nodemonConfig": {
        "watch": [
            "src",
            ".env"
        ],
        "ext": "ts",
        "exec": "ts-node -r tsconfig-paths/register --transpile-only src/web-server.ts"
    },
    "eslintConfig": {
        "root": true,
        "ignorePatterns": [
            "**/dist/**",
            "**/docker/**"
        ],
        "extends": [
            "universe/node",
            "plugin:md/recommended"
        ],
        "parser": "@typescript-eslint/parser",
        "overrides": [
            {
                "files": [
                    "*.json"
                ],
                "rules": {
                    "no-unused-expressions": "off"
                }
            },
            {
                "files": [
                    "*.md"
                ],
                "parser": "markdown-eslint-parser",
                "rules": {
                    "prettier/prettier": [
                        "error",
                        {
                            "parser": "markdown"
                        }
                    ]
                }
            }
        ],
        "rules": {
            "md/remark": [
                "error",
                {
                    "plugins": [
                        [
                            "lint-maximum-line-length",
                            false
                        ]
                    ]
                }
            ]
        }
    },
    "prettier": {
        "singleQuote": true,
        "trailingComma": "all",
        "arrowParens": "avoid",
        "semi": true,
        "useTabs": false,
        "tabWidth": 4,
        "printWidth": 120
    },
    "lint-staged": {
        "*.{ts,json}": "eslint --fix",
        "*.{md}": "prettier --write"
    },
    "commitlint": {
        "extends": [
            "@commitlint/config-conventional"
        ]
    }
}
